{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceNamePrefix": {
            "type": "string",
            "defaultValue": "asav",
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
                "description": "Prefix used in resource names created by this template(Use only lowercase letters)"
            }
        },
        "virtualNetworkRg": {
            "type": "string",
            "defaultValue": "cisco-virtualnet-rg",
            "metadata": {
                "description": "Virtual network resource group name"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "cisco-virtualnet",
            "metadata": {
                "description": "Virtual network name"
            }
        },
        "mgmtSubnet": {
            "type": "string",
            "defaultValue": "mgmt",
            "metadata": {
                "description": "Management subnet name"
            }
        },
        "dataInterfaceSubnet": {
            "type": "string",
            "defaultValue": "data",
            "metadata": {
                "description": "Data subnet name"
            }
        },
        "gatewayLoadBalancerIP": {
            "type": "string",
            "defaultValue": "10.0.3.4",
            "metadata": {
                "description": "Internal LB IP in inside subnet."
            }
        },
        "cclSubnet": {
            "type": "string",
            "defaultValue": "ccl",
            "metadata": {
                "description": "CCL subnet name"
            }
        },
        "internalPortNumber": {
            "defaultValue": "2000",
            "type": "string",
            "metadata": {
                "description": "Internal Port Number for the vxlan tunnel interface"
            }
        },
        "externalPortNumber": {
            "defaultValue": "2001",
            "type": "string",
            "metadata": {
                "description": "External Port Number for the vxlan tunnel interface"
            }
        },
        "internalSegmentId": {
            "defaultValue": "800",
            "type": "string",
            "metadata": {
                "description": "Internal Segment ID for the vxlan tunnel interface"
            }
        },
        "externalSegmentId": {
            "defaultValue": "801",
            "type": "string",
            "metadata": {
                "description": "External Segment ID for the vxlan tunnel interface"
            }
        },
        "clusterGroupName": {
            "defaultValue": "asav-gwlb-cluster",
            "type": "string",
            "metadata": {
                "description": "Cluster Group Name"
            }
        },
        "asaLicensingSku": {
          "type" : "string",
          "defaultValue" : "asav-azure-byol",
          "allowedValues" : [
              "asav-azure-byol",
              "asav-azure-payg"
          ],
          "metadata" : {
              "description" : "Licensing model (asav-azure-byol : Bring-your-own-license, asav-azure-payg : Pay-as-you-go)"
          }
        },
        "softwareVersion": {
            "type": "string",
            "defaultValue": "92022.0.0",
            "allowedValues": [
                "92022.0.0"
            ],
            "metadata": {
                "description": "ASA Software version to use."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D3_v2",
            "allowedValues": [
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D8_v3",
                "Standard_D16_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_F8s_v2",
                "Standard_F16s_v2"
            ],
            "metadata": {
                "description": "Size of the Virtual Machine"
            }
        },
        "asaAdminUserName": {
            "type": "string",
            "defaultValue": "cisco",
            "metadata": {
                "description": "Username for primary account on the virtual machine (used only for vm management). This is not the admin username and 'admin' is reserved."
            }
        },
        "asaAdminUserPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Password for ASAv 'admin' user (Passwords must be 12 to 72 characters long, must have : lowercase, uppercase, numbers & special characters and must have no more than 2 repeating characters)"
            }
        },
        "asavNodeCount": {
            "type": "int",
            "minValue": 1,
            "maxValue": 16,
            "defaultValue": 4,
            "metadata": {
                "description": "Cluster Node count"
            }
        },
        "asavConfigFileUrl": {
          "type": "string",
          "defaultValue" : "",
          "metadata": {
            "description": "ASAv configuration file path : example - https://path_to_asav_config_file/config_file"
          }
        }
    },
    "variables": {
        "vmssName": "[concat(parameters('resourceNamePrefix'),'-vmss')]",
        "gwLbName": "[concat(parameters('resourceNamePrefix'),'-gwlb')]",
        "dataSecGrp": "[concat(parameters('resourceNamePrefix'),'-dataIntfSecGrp')]",
        "mgmtSecGrp": "[concat(parameters('resourceNamePrefix'),'-mgmtIntfSecGrp')]",
        "gwLbId": "[resourceId('Microsoft.Network/loadBalancers',variables('gwLbName'))]",
        "vnetId": "[resourceId(parameters('virtualNetworkRg'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "mgmtSubnetId": "[concat(variables('vnetID'),'/subnets/', parameters('mgmtSubnet'))]",
        "dataInterfaceSubnetId": "[concat(variables('vnetID'),'/subnets/', parameters('dataInterfaceSubnet'))]",
        "cclSubnetId": "[concat(variables('vnetID'),'/subnets/', parameters('cclSubnet'))]",
        "storageAccountName": "[concat(parameters('resourceNamePrefix'), uniquestring(resourceGroup().id))]",
        "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "vmssVmMgmtNicName": "mgmtNic",
        "vmssVmDataNicName": "dataNic",
        "vmssVmCclNicName": "cclNic",
        "idleTimeoutInMinutes": 30,
        "publisher": "cisco",
        "offer": "cisco-asav",
        "sku":  "[parameters('asaLicensingSku')]",
        "functionAppName" :      "[concat(parameters('resourceNamePrefix'),'-function-app')]",
        "appInsightsName" :      "[concat(parameters('resourceNamePrefix'),'-appinsight')]",
        "systopicname": "[concat(parameters('resourceNamePrefix'),'-systopic')]",
        "functionWorkerRuntime": "python",
        "queuename": "resourceactionsuccessqueue",
        "esubname": "[concat(parameters('resourceNamePrefix'),'-esub')]",
        "role1":                 "[guid(resourceGroup().id,subscription().subscriptionId,'role1')]",
        "role2":                 "[guid(resourceGroup().id,subscription().subscriptionId,'role2')]",
        "role3":                 "[guid(resourceGroup().id,subscription().subscriptionId,'role3')]",
        "tunnelPortRange": "[concat(parameters('internalPortNumber'),'-',parameters('externalPortNumber'))]",
        "userData": "[concat('interface Management0/0 \n management-only \n nameif management \n security-level 100 \n ip address dhcp setroute \n no shutdown \n crypto key generate rsa modulus 2048 \n ssh 0 0 management \n ssh timeout 60 \n ssh version 2 \n aaa authentication ssh console LOCAL \n')]"
    },
    "resources": [
       {
            "apiVersion": "2021-08-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('mgmtSecGrp')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-Rule",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "HTTPS-Rule",
                        "properties": {
                            "description": "Allow tcp 443",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2021-08-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('dataSecGrp')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-All",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "vxlan-tunnel",
                        "properties": {
                            "description": "Allow vxlan tunnel ports",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[variables('tunnelPortRange')]",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-09-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/', variables('queuename'))]",
            "properties": {
                "metadata": {}
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/', 'outqueue')]",
            "properties": {
                "metadata": {}
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/', 'asavdetails')]",
            "properties": {
                "metadata": {}
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "apiVersion": "2020-02-02",
            "name": "[variables('appInsightsName')]",
            "type": "Microsoft.Insights/components",
            "kind": "web",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('functionAppName'))]": "Resource"
            },
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('appInsightsName')]"
            }
        },
        {
            "apiVersion": "2021-03-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('functionAppName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp,linux",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
            ],
            "properties": {
                "enabled": true,
                "siteConfig": {
                    "linuxFxVersion": "PYTHON|3.9",
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "[variables('functionWorkerRuntime')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                            "value": "true"
                        },
                        {
                            "name": "ENABLE_ORYX_BUILD",
                            "value": "true"
                        },
                        {
                           "name": "RESOURCE_PREFIX",
                           "value": "[parameters('resourceNamePrefix')]"
                        },
                        {
                            "name": "ANY_IPV4_NAME",
                            "value": "[concat(parameters('resourceNamePrefix'),'-anyipv4')]"
                        },
                        {
                            "name": "AZURE_UTILITY_IP",
                            "value": "168.63.129.16"
                        },
                        {
                            "name": "AZURE_UTILITY_IP_NAME",
                            "value": "azure-utility-ip"
                        },
                        {
                            "name": "ASA_PASSWORD",
                            "value": "[parameters('asaAdminUserPassword')]"
                        },
                        {
                            "name": "ASA_USERNAME",
                            "value": "[parameters('asaAdminUserName')]"
                        },
                        {
                            "name": "ASA_COUNT",
                            "value": "[parameters('asavNodeCount')]"
                        },
                        {
                            "name": "MNGT_PUBLIC_IP_NAME",
                            "value": "mgmtPublicIP"
                        },
                        {
                            "name": "RESOURCE_GROUP_NAME",
                            "value": "[resourceGroup().name]"
                        },
          			    {
                            "name": "SUBSCRIPTION_ID",
                            "value": "[subscription().subscriptionId]"
                        },
                        {
                            "name": "VMSS_NAME",
                            "value": "[variables('vmssName')]"
                        },
                        {
                          "name": "GWLB_SUPPORT",
                          "value": "YES"
                        },
                        {
                          "name": "TUNNEL_PORT_INTERNAL",
                          "value": "[parameters('internalPortNumber')]"
                        },
                        {
                          "name": "TUNNEL_IDENTIFIER_INTERNAL",
                          "value": "[parameters('internalSegmentId')]"
                        },
                        {
                          "name": "TUNNEL_PORT_EXTERNAL",
                          "value": "[parameters('externalPortNumber')]"
                        },
                        {
                          "name": "TUNNEL_IDENTIFIER_EXTERNAL",
                          "value": "[parameters('externalSegmentId')]"
                        },
                        {
                          "name": "VXLAN_ENCAP_PORT_FOR_VTEP",
                          "value": "4789"
                        },
                        {
                          "name": "GWLB_IP_ADDRESS",
                          "value": "[parameters('gatewayLoadBalancerIP')]"
                        },
                        {
                            "name": "MNGT_IP_CONFIG_NAME",
                            "value": "myIpConfig"
                        },
                        {
                            "name": "MNGT_NET_INTERFACE_NAME",
                            "value": "mgmtNic"
                        },
                        {
                          "name": "ASAV_CONFIG_FILE",
                          "value": "[parameters('asavConfigFileUrl')]"
                        },
                        {
                          "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                          "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2019-06-01').keys[0].value)]"
                        },
                        {
                          "name": "WEBSITE_CONTENTSHARE",
                          "value": "[variables('functionAppName')]"
                        }
                    ]
                },
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('gwLbName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-08-01",
            "sku": {
                "name": "Gateway"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "subnet": {
                                "id": "[variables('dataInterfaceSubnetId')]"
                            },
                            "privateIPAddress": "[parameters('gatewayLoadBalancerIP')]",
                            "privateIPAllocationMethod": "Static"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "backendPool",
                        "properties": {
                            "tunnelInterfaces": [
                                {
                                    "port": "[parameters('internalPortNumber')]",
                                    "identifier": "[parameters('internalSegmentId')]",
                                    "protocol": "VXLAN",
                                    "type": "Internal"
                                },
                                {
                                    "port": "[parameters('externalPortNumber')]",
                                    "identifier": "[parameters('externalSegmentId')]",
                                    "protocol": "VXLAN",
                                    "type": "External"
                                }
                            ]
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('gwLbName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
                            },
                            "backendAddressPool": {
                                "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('gwLbName')), '/backendAddressPools/BackendPool')]"
                            },
                            "probe": {
                                "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('gwLbName')), '/probes/lbprobe')]"
                            },
                            "protocol": "All",
                            "frontendPort": 0,
                            "backendPort": 0,
                            "loadDistribution": "SourceIPProtocol"
                        },
                        "Name": "lbrule"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        },
                        "name": "lbprobe"
                    }
                ]
            }
        },
        {
            "name": "[variables('systopicname')]",
            "type": "Microsoft.EventGrid/systemTopics",
            "apiVersion": "2020-10-15-preview",
            "location": "global",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "source": "[resourceGroup().id]",
                "topicType": "Microsoft.Resources.ResourceGroups"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2021-07-01",
            "name": "[variables('vmssName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('gwLbName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('mgmtSecGrp'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('dataSecGrp'))]",
                "[concat('Microsoft.EventGrid/systemTopics/',variables('systopicname'))]",
                "[resourceID('Microsoft.Storage/storageAccounts/queueServices/queues', variables('storageAccountName'), 'default', variables('queuename'))]",
                "[resourceID('Microsoft.Storage/storageAccounts/queueServices/queues', variables('storageAccountName'), 'default', 'outqueue')]"
            ],
            "sku": {
                "name": "[parameters('vmSize')]",
                "capacity": "[parameters('asavNodeCount')]"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "plan": {
                "name": "[variables('sku')]",
                "publisher": "[variables('publisher')]",
                "product": "[variables('offer')]"
            },
            "properties": {
                "singlePlacementGroup": false,
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "[variables('publisher')]",
                            "offer": "[variables('offer')]",
                            "sku": "[variables('sku')]",
                            "version": "[parameters('softwareVersion')]"
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('vmssName')]",
                        "adminUsername": "[parameters('asaAdminUserName')]",
                        "adminPassword": "[parameters('asaAdminUserPassword')]"
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true,
                            "storageUri": "[concat('https://',variables('storageAccountName'),'.blob.core.windows.net')]"
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[variables('vmssVmMgmtNicName')]",
                                "properties": {
                                    "primary": true,
                                    "networkSecurityGroup": {
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('mgmtSecGrp'))]"
                                    },
                                    "ipConfigurations": [
                                        {
                                            "name": "myIpConfig",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[variables('mgmtSubnetId')]"
                                                },
                                                "publicipaddressconfiguration": {
                                                    "name": "mgmtPublicIP",
                                                    "properties": {
                                                        "idleTimeoutInMinutes": "[variables('idleTimeoutInMinutes')]"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "name": "[variables('vmssVmDataNicName')]",
                                "properties": {
                                    "primary": false,
                                    "enableAcceleratedNetworking": true,
                                    "enableIPForwarding": true,
                                    "networkSecurityGroup": {
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dataSecGrp'))]"
                                    },
                                    "ipConfigurations": [
                                        {
                                            "name": "myIpConfig",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[variables('dataInterfaceSubnetId')]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat(variables('gwLbId'), '/backendAddressPools/backendPool')]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "name": "[variables('vmssVmCclNicName')]",
                                "properties": {
                                    "primary": false,
                                    "enableAcceleratedNetworking" : true,
                                    "ipConfigurations": [
                                        {
                                            "name": "myIpConfig",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[variables('cclSubnetId')]"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "userData": "[base64(variables('userData'))]"
                }
            }
        },
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "apiVersion": "2015-04-01",
            "name": "instance count limit",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]"
            ],
            "properties": {
                "name": "instance count limit",
                "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
                "enabled": true,
                "profiles": [
                    {
                        "name": "Fix instance count",
                        "capacity": {
                            "minimum": 1,
                            "maximum": 16,
                            "default": "[parameters('asavNodeCount')]"
                        },
                        "rules": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2015-07-01",
            "name": "[variables('role1')]",
            "dependsOn": [
                "[resourceID('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2016-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('role2')]",
            "dependsOn": [
                "[resourceID('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '974c5e8b-45b9-4653-ba55-5f855dd0fb88')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2016-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('role3')]",
            "dependsOn": [
                "[resourceID('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '974c5e8b-45b9-4653-ba55-5f855dd0fb88')]",
                "principalId": "[reference(resourceId('Microsoft.EventGrid/systemTopics', variables('systopicname')), '2020-10-15-preview', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
            "apiVersion": "2021-12-01",
            "name": "[concat(variables('systopicname'), '/', variables('esubname'))]",
            "dependsOn":[
                "[resourceID('Microsoft.Authorization/roleAssignments',variables('role3'))]"
            ],
            "properties": {
                "filter": {
                    "includedEventTypes": [
                         "Microsoft.Resources.ResourceActionSuccess"
                    ],
                    "advancedFilters": [],
                    "enableAdvancedFilteringOnArrays": true
                },
                "labels": [],
                "eventDeliverySchema": "EventGridSchema",
                "destination": {
                    "endpointType": "StorageQueue",
                    "properties": {
                        "resourceId": "[resourceId('Microsoft.Storage/storageAccounts',variables('storageAccountName'))]",
                        "queueName": "[variables('queuename')]",
                        "queueMessageTimeToLiveInSeconds": 604800
                    }
                }
            }
        }
    ]
}
