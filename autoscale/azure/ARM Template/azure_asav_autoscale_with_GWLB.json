{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "resourceNamePrefix": {
        "type": "string",
        "defaultValue": "asav",
	    	"minLength" : 3,
	    	"maxLength" : 10,
        "metadata": {
            "description": "Prefix used in resource names created by this template(Use only lowercase letters)"
        }
      },
      "virtualNetworkCIDR": {
          "defaultValue": "192.168.0.0/16",
          "type": "string",
          "metadata": {
              "description": "New Virtual Network will be created with this address space"
          }
      },
      "managementSubnetCIDR": {
          "defaultValue": "192.168.1.0/24",
          "type": "string",
          "metadata": {
              "description": "Management Subnet will be created with this address space"
          }
      },
      "dataSubnetCIDR": {
          "defaultValue": "192.168.2.0/24",
          "type": "string",
          "metadata": {
              "description": "Data Subnet will be created with this address space"
          }
      },
      "gwlbIP": {
        "type": "string",
        "defaultValue": "192.168.2.100",
        "metadata": {
            "description": "Gateway Loadbalancer Frontend IP"
        }
      },
      "softwareVersion": {
        "type": "string",
        "defaultValue": "92211.0.0",
        "allowedValues": [
            "916457.0.0",
            "917139.0.0",
            "918429.0.0",
            "919128.0.0",
            "9203.0.0",
            "92211.0.0"
        ],
        "metadata": {
            "description": "ASA Software version to use."
        }
      },
      "vmSize" : {
        "type" : "string",
        "defaultValue" : "Standard_D3_v2",
        "allowedValues" : [
            "Standard_D3",
            "Standard_D3_v2",
            "Standard_D4",
            "Standard_D4_v2",
            "Standard_D8_v3",
            "Standard_DS3",
            "Standard_DS3_v2",
            "Standard_DS4",
            "Standard_DS4_v2",
            "Standard_F4",
            "Standard_F4s",
            "Standard_F8",
            "Standard_F8s"
        ],
        "metadata" : {
            "description" : "Size of the Virtual Machine"
        }
      },
      "asaAdminUserName": {
	    "type" : "string",
        "defaultValue": "asauser",
        "metadata": {
            "description": "User name for ASA administrator account user (user names such as admin, Administrator are disallowed - see Azure docs)"
        }
      },
      "asaAdminUserPassword": {
        "type": "securestring",
        "defaultValue": "",
        "metadata": {
            "description": "Password for ASA administrator user (Passwords must be 12 to 72 characters long, must have : lowercase, uppercase, numbers & special characters and must have no more than 2 repeating characters)"
        }
      },
      "scaleInThreshold": {
        "type": "string",
        "defaultValue": "10",
        "metadata": {
            "description": "Scale-IN threshold in %"
        }
      },
      "scaleOutThreshold": {
        "type": "string",
        "defaultValue": "80",
        "metadata": {
            "description": "Scale-OUT threshold in %"
        }
      },
      "minAsaCount": {
        "type": "string",
        "defaultValue": "1",
        "metadata": {
            "description": "Minimum required ASAs in Scale Set"
        }
      },
      "maxAsaCount": {
        "type": "string",
        "defaultValue": "5",
        "metadata": {
            "description": "Maximum allowed ASAs in Scale Set"
        }
      },
      "metricsAverageDuration": {
        "type": "string",
        "defaultValue": "1",
        "allowedValues" : [
            "1",
            "5",
            "15",
            "30"
        ],
        "metadata": {
            "description": "Duration in minutes for which metrics samples are collected and averaged"
        }
      },
      "initDeploymentMode": {
        "type": "string",
        "defaultValue": "BULK",
        "allowedValues" : [
            "BULK",
            "STEP"
        ],
        "metadata": {
            "description": "Initial deployment mode BULK/STEP"
        }
      },
      "scalingPolicy": {
        "type": "string",
        "defaultValue": "POLICY-1",
        "allowedValues" : [
            "POLICY-1",
            "POLICY-2"
        ],
        "metadata": {
            "description": "Scaling Policy.. Refer user guide for details"
        }
      },
      "configurationFile": {
        "type": "string",
        "defaultValue": "https://path_to_asav_config_file/config_file",
        "metadata": {
            "description": "ASAv configuration file path"
        }
      }
    },
    "variables": {
	  "vmssName" :        "[concat(parameters('resourceNamePrefix'),'-vmss')]",
	  "gwlbName"  :        "[concat(parameters('resourceNamePrefix'),'-gwlb')]",
    "dataSecGrp" :      "[concat(parameters('resourceNamePrefix'),'-dataIntfSecGrp')]",
    "mgmtSecGrp" :      "[concat(parameters('resourceNamePrefix'),'-mgmtIntfSecGrp')]",
    "logicAppName" : 	  "[concat(parameters('resourceNamePrefix'),'-logic-app')]",
    "vnetName" : 	      "[concat(parameters('resourceNamePrefix'),'-vNet')]",
    "mgmtSubnetName" :  "[concat(parameters('resourceNamePrefix'),'-managementSubnet')]",
    "dataSubnetName" : 	  "[concat(parameters('resourceNamePrefix'),'-dataSubnet')]",
    "appInsightsName" : "[concat(parameters('resourceNamePrefix'),'-appinsight')]",
	  "functionAppName" : "[concat(parameters('resourceNamePrefix'),'-function-app')]",
	  "appInsightsName" : "[concat(parameters('resourceNamePrefix'),'-appinsight')]",
    "gwlbId" :           "[resourceId('Microsoft.Network/loadBalancers',variables('gwlbName'))]",
    "vnetId":           "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "mgmtSubnetId":     "[concat(variables('vnetID'),'/subnets/', variables('mgmtSubnetName'))]",
    "dataSubnetId":   "[concat(variables('vnetID'),'/subnets/', variables('dataSubnetName'))]",
    "storageAccountName": "[concat(parameters('resourceNamePrefix'), uniquestring(resourceGroup().id))]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "hostingPlanName":  "[variables('functionAppName')]",
    "functionAppId": "[concat(resourceGroup().id,'/providers/','Microsoft.Web/sites/', variables('functionAppName'))]",
    "functionWorkerRuntime": "dotnet",
    "appInsightsSourceName": "IbizaWebAppExtensionCreate",
    "hostNameBindingsName": "[concat(variables('functionAppName'), '/', variables('functionAppName'), '.azurewebsites.net')]",
    "hostSslName1": "[concat(toLower(variables('functionAppName')), '.azurewebsites.net')]",
    "hostSslName2": "[concat(toLower(variables('functionAppName')), '.scm.azurewebsites.net')]",
    "vmssVmMgmtNicName": "mgmtNic",
    "vmssVmDataNicName": "dataNic",
    "idleTimeoutInMinutes": 30,
    "publisher":        "cisco",
    "offer":            "cisco-asav",
    "sku":              "asav-azure-byol"
    },
    "resources": [
      {
        "name": "[variables('LogicAppName')]",
        "type": "Microsoft.Logic/workflows",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-06-01",
        "tags": {
          "displayName": "LogicApp"
        },
        "properties": {
		    "state": "Disabled",
          "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "actions": {},
            "contentVersion": "1.0.0.0",
            "outputs": {},
            "parameters": { },
            "triggers": {
              "manual": {
                  "inputs": {
                      "schema": {}
                  },
                  "kind": "Http",
                  "type": "Request"
              }
            }
          },
          "parameters": {}
        }
      },
      {
         "apiVersion": "2015-06-15",
         "type": "Microsoft.Network/networkSecurityGroups",
         "name": "[variables('mgmtSecGrp')]",
         "location": "[resourceGroup().location]",
         "properties": {
            "securityRules": [
               {
                  "name": "SSH-Rule",
                  "properties": {
                     "description": "Allow SSH",
                     "protocol": "Tcp",
                     "sourcePortRange": "*",
                     "destinationPortRange": "22",
                     "sourceAddressPrefix": "Internet",
                     "destinationAddressPrefix": "*",
                     "access": "Allow",
                     "priority": 100,
                     "direction": "Inbound"
                  }
               }
            ]
         }
      },
      {
         "apiVersion": "2015-06-15",
         "type": "Microsoft.Network/networkSecurityGroups",
         "name": "[variables('dataSecGrp')]",
         "location": "[resourceGroup().location]",
         "properties": {
            "securityRules": []
         }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "properties": {
            "accountType": "Standard_LRS"
        }
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2018-02-01",
        "name": "[variables('hostingPlanName')]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Y1",
          "tier": "Dynamic"
        },
        "properties": {
          "name": "[variables('hostingPlanName')]",
          "computeMode": "Dynamic"
        }
      },
      {
        "apiVersion": "2016-08-01",
        "type": "Microsoft.Web/sites",
        "name": "[variables('functionAppName')]",
        "location": "[resourceGroup().location]",
        "kind": "functionapp",
        "identity": {
          "type": "SystemAssigned"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
        ],
        "properties": {
          "enabled": true,
          "hostNameSslStates": [
            {
                "name": "[variables('hostSslName1')]",
                "sslState": "Disabled",
                "hostType": "Standard"
            },
            {
                "name": "[variables('hostSslName2')]",
                "sslState": "Disabled",
                "hostType": "Repository"
            }
          ],
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "reserved": false,
          "scmSiteAlsoStopped": false,
          "clientAffinityEnabled": false,
          "clientCertEnabled": false,
          "hostNamesDisabled": false,
          "containerSize": 1536,
          "dailyMemoryTimeQuota": 0,
          "httpsOnly": false,
          "siteConfig": {
            "numberOfWorkers": 1,
            "netFrameworkVersion": "v4.0",
            "remoteDebuggingVersion": "VS2017",
            "phpVersion": "5.6",
            "logsDirectorySizeLimit": 35,
            "managedPipelineMode": "Integrated",

            "appSettings": [
              {
                "name": "AzureWebJobsDashboard",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
              },
              {
                "name": "AzureWebJobsStorage",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
              },
              {
                "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
              },
              {
                "name": "WEBSITE_CONTENTSHARE",
                "value": "[toLower(variables('functionAppName'))]"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~2"
              },
              {
                "name": "WEBSITE_NODE_DEFAULT_VERSION",
                "value": "8.11.1"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "[variables('functionWorkerRuntime')]"
              },
              {
                "name": "ASA_PASSWORD",
                "value": "[parameters('asaAdminUserPassword')]"
              },
              {
                "name": "ASA_USERNAME",
                "value":"[parameters('asaAdminUserName')]"
              },
              {
                "name": "FUNCTION_APP_EDIT_MODE",
                "value": "readwrite"
              },
              {
                "name": "MAX_ASA_COUNT",
                "value": "[parameters('maxAsaCount')]"
              },
              {
                "name": "MIN_ASA_COUNT",
                "value": "[parameters('minAsaCount')]"
              },
              {
                "name": "MNGT_IP_CONFIG_NAME",
                "value": "myIpConfig"
              },
              {
                "name": "MNGT_NET_INTERFACE_NAME",
                "value": "mgmtNic"
              },
              {
                "name": "MNGT_PUBLIC_IP_NAME",
                "value": "mgmtPublicIP"
              },
              {
                "name": "NETWORK_NAME",
                "value": "[concat(parameters('resourceNamePrefix'),'-vnet')]"
              },
              {
                "name": "RESOURCE_GROUP_NAME",
                "value": "[resourceGroup().name]"
              },
			  {
                "name": "SUBSCRIPTION_ID",
                "value": "[subscription().subscriptionId]"
              },
              {
                "name": "SAMPLING_TIME_MIN",
                "value": "[parameters('metricsAverageDuration')]"
              },
              {
                "name": "SCALE_IN_THRESHLD",
                "value": "[parameters('scaleInThreshold')]"
              },
              {
                "name": "SCALE_OUT_THRESHLD",
                "value": "[parameters('scaleOutThreshold')]"
              },
              {
                "name": "VMSS_NAME",
                "value": "[variables('vmssName')]"
              },
              {
                "name": "DELETE_FAULTY_ASA",
                "value": "NO"
              },
              {
                "name": "PERFORM_LICENSE_CHECK",
                "value": "NO"
              },
              {
                "name": "INITIAL_DEPLOYMENT_MODE",
                "value": "[parameters('initDeploymentMode')]"
              },
              {
                "name": "SCALING_POLICY",
                "value": "[parameters('scalingPolicy')]"
              },
              {
                "name": "SET_UNIQUE_HOST_NAME",
                "value": "YES"
              },
			  {
                "name": "ASAV_CONFIG_FILE",
                "value": "[parameters('configurationFile')]"
              }
		    ]
          }
        }
      },
      {
        "apiVersion": "2015-05-01",
        "name": "[variables('appInsightsName')]",
        "type": "Microsoft.Insights/components",
        "kind": "web",
        "location": "[resourceGroup().location]",
        "tags": {
            "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('functionAppName'))]": "Resource"
        },
        "properties": {
            "Application_Type": "web",
            "ApplicationId": "[variables('appInsightsName')]",
            "Request_Source": "[variables('appInsightsSourceName')]"
        }
      },
      {
        "type": "Microsoft.Web/sites/hostNameBindings",
        "apiVersion": "2016-08-01",
        "name": "[variables('hostNameBindingsName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
        ],
        "properties": {
            "siteName": "[concat(variables('functionAppName'),'-site')]",
            "hostNameType": "Verified"
        }
      },
      {
          "type": "Microsoft.Network/virtualNetworks",
          "name": "[variables('vnetName')]",
          "apiVersion": "2020-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
              "addressSpace": {
                  "addressPrefixes": [
                      "[parameters('virtualNetworkCIDR')]"
                    ]
              },
              "subnets": [
                  {
                      "name": "[variables('mgmtSubnetName')]",
                      "properties": {
                          "addressPrefix": "[parameters('managementSubnetCIDR')]"
                      }
                  },
                  {
                      "name": "[variables('dataSubnetName')]",
                      "properties": {
                          "addressPrefix": "[parameters('dataSubnetCIDR')]"
                      }
                  }
              ]
          }
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "name": "[variables('gwlbName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-08-01",
        "sku": {
            "name": "Gateway"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontEnd",
              "properties": {
                "subnet": {
                  "id": "[variables('dataSubnetId')]"
                },
                "privateIPAddress": "[parameters('gwlbIP')]",
                "privateIPAllocationMethod": "Static"
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "backendPool",
              "properties": {
                 "tunnelInterfaces": [
                  {
                    "port": 2000,
                    "identifier": 800,
                    "protocol": "VXLAN",
                    "type": "Internal"
                  },
                  {
                    "port": 2001,
                    "identifier": 801,
                    "protocol": "VXLAN",
                   "type": "External"
                 }
               ]
             }
            }
          ],
          "loadBalancingRules": [
            {
              "properties": {
                "frontendIPConfiguration": {
                    "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('gwlbName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
                },
                "backendAddressPool": {
                    "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('gwlbName')), '/backendAddressPools/BackendPool')]"
                },
                "probe": {
                    "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('gwlbName')), '/probes/lbprobe')]"
                },
                "protocol": "All",
                "frontendPort": 0,
                "backendPort": 0,
                "loadDistribution": "SourceIPProtocol"
              },
              "Name": "lbrule"
            }
          ],
          "probes": [
            {
              "properties": {
                "protocol": "Tcp",
                "port": 22,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              },
              "name": "lbprobe"
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "[variables('vmssName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-12-01",
        "dependsOn": [
            "[concat('Microsoft.Network/loadBalancers/', variables('gwlbName'))]",
            "[concat('Microsoft.Network/networkSecurityGroups/',variables('mgmtSecGrp'))]",
            "[concat('Microsoft.Network/networkSecurityGroups/',variables('dataSecGrp'))]"
        ],
        "sku": {
          "name": "[parameters('vmSize')]",
          "capacity": 0
        },
        "zones": [
            "1",
            "2",
            "3"
        ],
        "plan": {
          "name": "[variables('sku')]",
          "publisher": "[variables('publisher')]",
          "product": "[variables('offer')]"
        },
        "properties": {
          "singlePlacementGroup": false,
          "upgradePolicy": {
            "mode": "Manual"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "imageReference": {
                "publisher": "[variables('publisher')]",
                "offer": "[variables('offer')]",
                "sku": "[variables('sku')]",
                "version": "[parameters('softwareVersion')]"
              }
            },
            "osProfile": {
              "computerNamePrefix": "[variables('vmssName')]",
              "adminUsername": "[parameters('asaAdminUserName')]",
              "adminPassword": "[parameters('asaAdminUserPassword')]"
            },
		      	"diagnosticsProfile": {
              "bootDiagnostics": {
                "enabled": true,
                "storageUri": "[concat('https://',variables('storageAccountName'),'.blob.core.windows.net')]"
              }
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "[variables('vmssVmMgmtNicName')]",
                  "properties": {
                    "primary": true,
					          "networkSecurityGroup": {
                       "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('mgmtSecGrp'))]"
                    },
                    "ipConfigurations": [
                      {
                        "name": "myIpConfig",
                        "properties": {
                          "subnet": {
                            "id": "[variables('mgmtSubnetId')]"
                          },
                          "publicipaddressconfiguration": {
                            "name": "mgmtPublicIP",
                            "properties": {
                              "idleTimeoutInMinutes": "[variables('idleTimeoutInMinutes')]"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "[variables('vmssVmDataNicName')]",
                  "properties": {
                    "primary": false,
			          		"networkSecurityGroup": {
                       "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dataSecGrp'))]"
                    },
                    "ipConfigurations": [
                      {
                        "name": "myIpConfig",
                        "properties": {
                          "subnet": {
                            "id": "[variables('dataSubnetId')]"
                          },
                          "loadBalancerBackendAddressPools": [
                            {
                              "id": "[concat( variables('gwlbId'), '/backendAddressPools/backendPool')]"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      }
    ]
  }
