# Copyright (c) 2021 Cisco Systems Inc or its affiliates.
#
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  Deploys AutoScale solution for Cisco ASAv instances with GWLB
Parameters:
  AutoscaleGrpNamePrefix:
    Description: >-
      This will be AutoScale Group Name prefix with suffix as Pod Number
    Type: String
    MaxLength: 18
    Default: ASAv
  PodNumber:
    Description: >-
      This will be suffixed to AutoScale Group(ASAv-Group-Name), if this value is 1 then, group name will be
      ASAv-Group-Name-1, It should be at least 1 numerical digit but not more than 3 digits.
    Type: String
    Default: 1
    AllowedPattern: '^\d{1,3}$'
    ConstraintDescription: must be a numerical string matching '^\d{1,3}$'
  NotifyEmailID:
    Description: >-
      Email address to which AutoScale Events Email needs to be sent.
    Type: String
  VpcId:
    Description: >-
      Select vpc for AutoScale group, a security group for Lambda function will be created,
      with name having "LambdaSecurityGroup" as suffix.
    Type: AWS::EC2::VPC::Id
  LambdaSubnets:
    Description: >-
      Please provide at least 2 subnet for Lambda functions. Note that these 2 subnet should have NAT GW,
      because Lambda functions should communicate with AWS Services which are public DNS.
      Order in which, you select subnet does't matter. Reference https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html
    Type: List<AWS::EC2::Subnet::Id>
  LambdaSG:
    Description: >-
      Provide Security Groups for Lambda functions, Note Keep outbound connections to ANYWHERE.
    Type: List<AWS::EC2::SecurityGroup::Id>
  NoOfAZs:
    Description: >-
      Total Number of Availability Zones into which ASAv will be deployed (Min 1 and Max 3 depends on Region).
    Type: Number
    AllowedValues:
      - 1
      - 2
      - 3
    Default: 2
  ListOfAzs:
    Type: CommaDelimitedList
    Description: >-
      Enter the list of Availability Zones (Based on Number of Availability Zones above).
      Please note down the order of AZs, subnet-ids and configuration file names should be in same order.
      For example instances in first availability zone specified will be always configured with az1-configuration.txt
  S3BktName:
    Description: The S3 Bucket name for lambda function
    Type: String
    AllowedPattern: '(?=^.{3,63}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)'
    ConstraintDescription: must be a valid S3 bucket name
  TgHealthPort:
    Description: >-
      Note By default this port shouldn't be used for traffic, because
      any request coming to ASAv having destination port as this will be routed to AWS Metadata server.
      If you want your application itself to reply for health probes then accordingly NAT rules can be changed for ASAv.
      In such case if application doesn't respond then ASAv will be marked as
      unhealthy and gets deleted due to Unhealthy instance threshold alarm.
    Type: String
    AllowedPattern: '^()([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])$'
    ConstraintDescription: must be a valid TCP port
    Default: 22
  AssignPublicIP:
    Description: >-
      Please select true if ASAv needs to have public IP address. In case ASAv needs to have public IP then management
      subnet should have AWS IGW as route to internet. If ASAv is configured to be BYOL licensing type,
      In case Cisco Smart Software Manager is to be used then Public IP is needed.
      In case of PAYG licensing ASAv doesn't require public IP.
    Type: String
    AllowedValues:
      - true
      - false
    Default: true
  ASAvMgmtSG:
    Description: >-
      Please select security group ID for ASAv instances
    Type: List<AWS::EC2::SecurityGroup::Id>
  ASAvMgmtSubnetId:
    Description: >-
      Select only one subnet per AZ. If multiple subnet from same AZ are chosen, Creation of LB will fail.
      Wrong Subnet selection will cause problems while deploying the ASAv instances.
      Make sure of adding Subnet from AZ provided.
    Type: List<AWS::EC2::Subnet::Id>
  ASAvInsideSubnetId:
    Description: >-
      Select only one subnet per AZ. If multiple subnet from same AZ are chosen, Creation of LB will fail.
      Wrong Subnet selection will cause problems while deploying the ASAv instances.
      Make sure of adding Subnet from AZ provided.
    Type: List<AWS::EC2::Subnet::Id>
  ASAvOutsideSubnetId:
    Description: >-
      Select only one subnet per AZ. If multiple subnet from same AZ are chosen, Creation of LB will fail.
      Wrong Subnet selection will cause problems while deploying the ASAv instances.
      Make sure of adding Subnet from AZ provided.
    Type: List<AWS::EC2::Subnet::Id>
  ASAvInstanceType:
    Description: >-
      Cisco ASAv EC2 instance type, based on instance-type chosen day0 or Userdata may change especially network interface configuration.
      Also user has to make sure supported instance-type is choosen for the ASAv version being used.
    Type: String
    AllowedValues:
      - m4.xlarge
      - m4.2xlarge
      - c3.xlarge
      - c3.2xlarge
      - c4.xlarge
      - c4.2xlarge
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
    Default: c5.xlarge
  ASAvLicenseType:
    Description: >-
      Choose Cisco ASAv EC2 instance license type, make sure below AMI ID entered is of same licensing type.
      In case if BYOL is chosen then license-configuration.txt should have licensing commands. For ASAv to reach out to Licensing Server or Cisco Smart Software Manager server required management subnet configuration should be done.
    Type: String
    AllowedValues:
      - BYOL
      - PAYG
    Default: BYOL
  ASAvAmiID:
    Description: >-
      Please choose correct AMI ID as per the region, desired version and license type(BYOL/PAYG).
      ASAv version 9.13 onwards releases are supported.
    Type: AWS::EC2::Image::Id
    Default: ami-01b0bfec54ba93d12
  ConfigFileURL:
    Description: >-
      Example http://asav-dmz-s-bucket.s3-website-us-east-1.amazonaws.com/
      Please note below URL should provide configuration for all the availability zones.
      This URL will be suffixed by az1-configuration.txt or az2-configuration.txt or az3-configuration.txt
    Type: String
    AllowedPattern: '^htt(p|ps):\/\/.*\/'
    ConstraintDescription: must be of Regex form '^htt(p|ps):\/\/.*\/'
  KmsArn:
    Description: >-
      [Conditional] ARN of an existing KMS (AWS KMS key to encrypt at rest), If specified, ASAv 'autoscaleuser' Password below should be encrypted
      Password. The Password encryption should be done only using the specified ARN.
      Generating Encrypted Password Ex: " aws kms encrypt --key-id <KMS ARN> --plaintext <password> ", Please used such generated password in below fields.
    Type: String
  AutoscaleUserPassword:
    Description: >-
      All ASAv instances come up with default password(AsAv_AuT0Scale), which is in Userdata field of Launch Template(Autoscale Group).
      Password will be changed to given(below) password once ASAv is accessible.
      Since this can be a plain text password or KMS encrypted password, minimum length should be 8 characters.
    NoEcho: true
    MinLength: 8
    Type: String
    ConstraintDescription: password must be of minimum 8 characters
  CpuThresholds:
    Description: >-
      [Optional] Specifying non-zero lower and upper threshold will create respective Scale policies.
      If 0,0 is selected, no cpu scaling alarm or policies will be created.
      Evaluation points & Data points are kept default/recommended values
    Type: CommaDelimitedList
    Default: 10,70
    AllowedValues:
      - 0,0
      - 0,90
      - 0,80
      - 0,70
      - 0,60
      - 0,50
      - 0,40
      - 0,30
      - 0,20
      - 0,10
      - 5,90
      - 5,70
      - 5,50
      - 5,30
      - 5,15
      - 10,90
      - 10,80
      - 10,70
      - 10,60
      - 10,50
      - 10,40
      - 10,30
      - 10,20
      - 10,0
      - 20,90
      - 20,80
      - 20,70
      - 20,60
      - 20,50
      - 20,30
      - 20,0
      - 30,90
      - 30,80
      - 30,70
      - 30,60
      - 30,50
      - 30,40
      - 30,0
      - 40,90
      - 40,80
      - 40,70
      - 40,60
      - 40,50
      - 40,0
      - 50,90
      - 50,80
      - 50,70
      - 50,60
      - 50,0
      - 60,90
      - 60,80
      - 60,70
      - 60,0
      - 70,90
      - 70,80
      - 70,0
      - 80,95
      - 80,90
      - 80,0
      - 90,95
      - 90,0
Conditions:
  support1zone: !Equals
    - !Ref NoOfAZs
    - 1
  support2zone: !Equals
    - !Ref NoOfAZs
    - 2
  support3zone: !Equals
    - !Ref NoOfAZs
    - 3
  UserNotifyEmail: !Not
    - !Equals
      - ''
      - !Ref NotifyEmailID
  ShouldEncrypt: !Not
    - !Equals
      - ''
      - !Ref KmsArn
  DoCpuUpPolcy: !Not
    - !Equals
      - 0
      - !Select ['1', !Ref CpuThresholds ]
  DoCpuLowPolcy: !Not
    - !Equals
      - 0
      - !Select ['0', !Ref CpuThresholds ]
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Pod Configuration
        Parameters:
          - AutoscaleGrpNamePrefix
          - PodNumber
          - NotifyEmailID
      - Label:
          default: Infrastructure Details
        Parameters:
          - VpcId
          - S3BktName
          - LambdaSubnets
          - LambdaSG
          - NoOfAZs
          - ListOfAzs
          - ASAvMgmtSubnetId
          - ASAvInsideSubnetId
          - ASAvOutsideSubnetId
      - Label:
          default: GWLB Configuration
        Parameters:
          - TgHealthPort
      - Label:
          default: Cisco ASAv Instance Configuration
        Parameters:
          - ASAvInstanceType
          - ASAvLicenseType
          - AssignPublicIP
          - ASAvMgmtSG
          - ASAvAmiID
          - ConfigFileURL
          - KmsArn
          - AutoscaleUserPassword
      - Label:
          default: Scaling Thresholds Configuration
        Parameters:
          - CpuThresholds
    ParameterLabels:
      AutoscaleGrpNamePrefix:
        default: Autoscale Group Name Prefix
      NotifyEmailID:
        default: Autoscale Email Notification
      PodNumber:
        default: Pod Number
      VpcId:
        default: VPC ID
      LambdaSubnets:
        default: Subnets for Lambda Functions
      LambdaSG:
        default: Security Groups for Lambda Functions
      NoOfAZs:
        default: Number of Availibility Zones
      ListOfAzs:
        default: Availability Zones
      S3BktName:
        default: S3 Bucket Name
      TgHealthPort:
        default: Enter a port for ASAv instance health check
      ASAvInstanceType:
        default: ASAv Instance type
      ASAvLicenseType:
        default: ASAv Instance License type
      ASAvAmiID:
        default: ASAv AMI-ID
      AssignPublicIP:
        default: Assign Public IP for ASAv from AWS IP Pool
      ASAvMgmtSG:
        default: Security Groups for ASAv Instance
      ASAvMgmtSubnetId:
        default: Subnets List for ASAv Management Interface
      ASAvInsideSubnetId:
        default: Subnets List for ASAv Inside Interface
      ASAvOutsideSubnetId:
        default: Subnets List for ASAv Outside Interface
      ConfigFileURL:
        default: Configuration file URL
      KmsArn:
        default: KMS Master Key ARN
      AutoscaleUserPassword:
        default: ASAv Password
      CpuThresholds:
        default: Lower,Upper CPU Thresholds
Resources:
# Lambda Layer ---------------------------------------------------------
  LambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.9
      Content:
        S3Bucket: !Ref S3BktName
        S3Key: autoscale_layer.zip
      Description: Lambda Layer for Cisco ASAv AutoScale Solution
      LayerName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'lambda-layer' ] ]
# ------------------------------------------------------------------------
# Lambda Role & Policy
# ------------------------------------------------------------------------
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'Role' ] ]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  LambdaPolicy:
    DependsOn:
      - LambdaRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'Policy' ] ]
      Roles:
        - !Ref LambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - logs:*
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - events:*
              - s3:*
              - cloudwatch:*
              - cloudwatch:SetAlarmState
              - sns:*
              - ssm:*
              - lambda:*
              - kms:Decrypt
            Effect: Allow
            Resource: '*'
# ------------------------------------------------------------------------
# User Notification SNS
# ------------------------------------------------------------------------
  UserNotifyTopic:
    Condition: UserNotifyEmail
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'UserNotifyTopic']]
  UserNotifyTopicSubscription:
    Condition: UserNotifyEmail
    DependsOn: UserNotifyTopic
    DeletionPolicy: Delete
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref NotifyEmailID
      Protocol: email
      TopicArn: !Ref UserNotifyTopic
# ------------------------------------------------------------------------
# Load Balancer & Target groups
# ------------------------------------------------------------------------
  lbOutside:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'gwlb' ] ]
      Type: gateway
      LoadBalancerAttributes: 
        - Key: load_balancing.cross_zone.enabled
          Value: true      
      Subnets: !If
        - support1zone
        - !Split
          - ':'
          - !Select ['0', !Ref ASAvOutsideSubnetId ]
        - !If
          - support2zone
          - !Split
            - ':'
            - !Join [':', [ !Select ['0', !Ref ASAvOutsideSubnetId ], !Select ['1', !Ref ASAvOutsideSubnetId ] ] ]
          - !Split
            - ':'
            - !Join [':',[ !Select ['0', !Ref ASAvOutsideSubnetId ], !Select ['1', !Ref ASAvOutsideSubnetId ], !Select ['2', !Ref ASAvOutsideSubnetId ] ] ]
  UnSectg0:        
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn:
      - lbOutside
    Properties:
      Name: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'lb-UnSec-tg0' ] ]
      Port: 6081
      Protocol: GENEVE
      HealthCheckPort: !Ref TgHealthPort
      HealthCheckIntervalSeconds: 15
      HealthCheckProtocol: TCP
      VpcId: !Ref VpcId
      TargetType: ip
      
  UnSeclistener0:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref UnSectg0
      LoadBalancerArn: !Ref lbOutside
 
# ------------------------------------------------------------------------
# Configure ASAv Lambda
# ------------------------------------------------------------------------
  ConfigureASAvLambda:
    Type: AWS::Serverless::Function
    DeletionPolicy: Delete
    Properties:
      FunctionName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'configure-ASAv-lambda'] ]
      Handler: configure_asav.lambda_handler
      Runtime: python3.9
      ReservedConcurrentExecutions: 10
      CodeUri:
        Bucket: !Ref S3BktName
        Key: configure_asav.zip
      Description: 'ConfigureASAv Lambda is responsible to configure ASAv'
      MemorySize: 128
      Timeout: 900
      VpcConfig:
        SecurityGroupIds: !Ref LambdaSG
        SubnetIds: !Ref LambdaSubnets
      KmsKeyArn: !Ref KmsArn
      Environment:
        Variables:
          DEBUG_LOGS: 'disable'
          KMS_ENC: !If
            - ShouldEncrypt
            - !Ref KmsArn
            - !Ref 'AWS::NoValue'
          ASG_NAME: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber ] ]
          CONFIG_FILE_URL: !Ref ConfigFileURL
          NO_OF_AZs: !Ref NoOfAZs
          ASA_LICENSE_TYPE: !Ref ASAvLicenseType
          LB_ARN_OUTSIDE: !Ref lbOutside
          AZ_LIST: !If
            - support1zone
            - !Select ['0', !Ref ListOfAzs ]
            - !If
              - support2zone
              - !Join ['::', [ !Select ['0', !Ref ListOfAzs ], !Select ['1', !Ref ListOfAzs ] ] ]
              - !Join ['::', [ !Select ['0', !Ref ListOfAzs ], !Select ['1', !Ref ListOfAzs ], !Select ['2', !Ref ListOfAzs ] ] ]
          AUTOSCALEUSER_PASSWORD: !Ref AutoscaleUserPassword
          CONFIGURE_ASA_TOPIC: !Ref ConfigureASAvTopic
          USER_NOTIFY_TOPIC_ARN: !If
            - UserNotifyEmail
            - !Ref UserNotifyTopic
            - !Ref 'AWS::NoValue'
      Role: !GetAtt LambdaRole.Arn
      Layers:
        - !Ref LambdaLayer
      Events:
        SNS1:
          Type: SNS
          Properties:
            Topic:
              Ref: ConfigureASAvTopic
  ConfigureASAvLambdaLogGrp:
    DependsOn: ConfigureASAvLambda
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Join ['/', ['/aws/lambda', !Ref ConfigureASAvLambda]]
  ConfigureASAvEvent:
    Type: AWS::Events::Rule
    Properties:
      Name: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'notify-instance-launch'] ]
      EventPattern:
        source:
          - aws.autoscaling
        detail-type:
          - EC2 Instance Launch Successful
          - EC2 Instance Terminate Successful
        detail:
          AutoScalingGroupName:
            - !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber ] ]
      Targets:
        - Id: CloudWatchEventTarget
          Arn: !GetAtt ConfigureASAvLambda.Arn
      State: ENABLED
  ConfigureASAvEventInvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn: ConfigureASAvEvent
    Properties:
      FunctionName: !Ref ConfigureASAvLambda
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt ConfigureASAvEvent.Arn
  ConfigureASAvTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber , 'configure-ASAv-topic'] ]
  UnhealthyAlarm:
    DependsOn:
      - lbOutside
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join ['', [!Ref AutoscaleGrpNamePrefix, '-',!Ref PodNumber, ' Unhealthy-Targets' ] ]
      ActionsEnabled: true
      Namespace: AWS/GatewayELB
      AlarmActions:
        - !Ref ConfigureASAvTopic
      AlarmDescription: Alarm when Unhealthy host count hits threshold
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: TargetGroup
          Value: !Ref UnSectg0
        - Name: LoadBalancer
          Value: !GetAtt lbOutside.LoadBalancerFullName
      EvaluationPeriods: 60
      MetricName: UnHealthyHostCount
      DatapointsToAlarm: 60
      Threshold: 1
      Period: 60
      Statistic: Maximum
      Unit: Count
# ------------------------------------------------------------------------
# Lifecycle Action Lambda
# ------------------------------------------------------------------------
  LifeCycleLambda:
    Type: AWS::Serverless::Function
    DependsOn:
      - LambdaRole
      - LambdaPolicy
      - ConfigureASAvTopic
    DeletionPolicy: Delete
    Properties:
      FunctionName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'lifecycle-lambda'] ]
      Handler: lifecycle_asav.lambda_handler
      Runtime: python3.9
      CodeUri:
        Bucket: !Ref S3BktName
        Key: lifecycle_asav.zip
      Description: 'Life Cycle Lambda is responsible to attach interfaces to new ASAv'
      MemorySize: 128
      ReservedConcurrentExecutions: 10
      Timeout: 300
      Role: !GetAtt LambdaRole.Arn
      VpcConfig:
        SecurityGroupIds: !Ref LambdaSG
        SubnetIds: !Ref LambdaSubnets
      Layers:
        - !Ref LambdaLayer
      Environment:
        Variables:
          DEBUG_LOGS: 'disable'
          ASG_NAME: !Join [ '-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber]]
          NO_OF_AZs: !Ref NoOfAZs
          ASA_LICENSE_TYPE: !Ref ASAvLicenseType
          INSIDE_SUBNET: !If
            - support1zone
            - !Select ['0', !Ref ASAvInsideSubnetId ]
            - !If
              - support2zone
              - !Join ['::', [ !Select ['0', !Ref ASAvInsideSubnetId ], !Select ['1', !Ref ASAvInsideSubnetId ] ] ]
              - !Join ['::', [ !Select ['0', !Ref ASAvInsideSubnetId ], !Select ['1', !Ref ASAvInsideSubnetId ], !Select ['2', !Ref ASAvInsideSubnetId ] ] ]
          OUTSIDE_SUBNET: !If
            - support1zone
            - !Select ['0', !Ref ASAvOutsideSubnetId ]
            - !If
              - support2zone
              - !Join ['::', [ !Select ['0', !Ref ASAvOutsideSubnetId ], !Select ['1', !Ref ASAvOutsideSubnetId ] ] ]
              - !Join ['::', [ !Select ['0', !Ref ASAvOutsideSubnetId ], !Select ['1', !Ref ASAvOutsideSubnetId ], !Select ['2', !Ref ASAvOutsideSubnetId ] ] ]
          LB_ARN_OUTSIDE: !Ref lbOutside
          LB_DEREGISTRATION_DELAY: 180
          CONFIGURE_ASAV_TOPIC_ARN: !Ref ConfigureASAvTopic
          USER_NOTIFY_TOPIC_ARN: !If
            - UserNotifyEmail
            - !Ref UserNotifyTopic
            - !Ref 'AWS::NoValue'
  LifeCycleLambdaLogGrp:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Join ['/', ['/aws/lambda', !Ref LifeCycleLambda]]
  LifeCycleEvent:
    Type: AWS::Events::Rule
    Properties:
      Name: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'lifecycle-action' ] ]
      EventPattern:
        source:
          - aws.autoscaling
        detail-type:
          - EC2 Instance-launch Lifecycle Action
          - EC2 Instance-terminate Lifecycle Action
        detail:
          AutoScalingGroupName:
            - !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber ] ]
      Targets:
        - Id: CloudWatchEventTarget
          Arn: !GetAtt LifeCycleLambda.Arn
      State: ENABLED
  LifeCycleEventInvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn: LifeCycleEvent
    Properties:
      FunctionName: !Ref LifeCycleLambda
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt LifeCycleEvent.Arn
# ------------------------------------------------------------------------
# AWS provided Dynamic Scaling
# ------------------------------------------------------------------------
  ScaleOutCPUpolicy:
    DependsOn:
      - ASAvGroup
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ASAvGroup
      PolicyType: SimpleScaling
      ScalingAdjustment: 1
  ScaleInCPUpolicy:
    DependsOn:
      - ASAvGroup
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ASAvGroup
      PolicyType: SimpleScaling
      ScalingAdjustment: -1
# ------------------------------------------------------------------------
# Scaling Alarm & Notification
# ------------------------------------------------------------------------
  CPUUpperboundAlarm1:
    Condition: DoCpuUpPolcy
    DependsOn:
      - ASAvGroup
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join ['', [!Ref AutoscaleGrpNamePrefix, '-',!Ref PodNumber, ' CPU-Upper-Threshold-Breach' ] ]
      ActionsEnabled: true
      Namespace: AWS/EC2
      AlarmActions:
        - !Ref ScaleOutCPUpolicy
      AlarmDescription: Alarm when CPU usage hits upper threshold
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref ASAvGroup
      EvaluationPeriods: 3
      MetricName: CPUUtilization
      Threshold: !Select ['1', !Ref CpuThresholds ]
      Period: 60
      Statistic: Average
      Unit: Percent
  CPULowerboundAlarm1:
    Condition: DoCpuLowPolcy
    DependsOn:
      - ASAvGroup
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join ['', [!Ref AutoscaleGrpNamePrefix, '-',!Ref PodNumber, ' CPU-Lower-Threshold-Breach' ] ]
      ActionsEnabled: true
      Namespace: AWS/EC2
      AlarmActions:
        - !Ref ScaleInCPUpolicy
      AlarmDescription: Alarm when CPU usage hits lower threshold
      ComparisonOperator: LessThanThreshold
      DatapointsToAlarm: 8
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref ASAvGroup
      EvaluationPeriods: 8
      MetricName: CPUUtilization
      Threshold: !Select ['0', !Ref CpuThresholds ]
      Period: 60
      Statistic: Average
      Unit: Percent
# ------------------------------------------------------------------------
# AutoScale Group & Launch Template
# ------------------------------------------------------------------------
  ASAvGroup:
    DependsOn:
      - LifeCycleEvent
      - ConfigureASAvEvent
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber ] ]
      VPCZoneIdentifier: !If
        - support1zone
        - !Split
          - ':'
          - !Select ['0', !Ref ASAvMgmtSubnetId ]
        - !If
          - support2zone
          - !Split
            - ':'
            - !Join [':', [ !Select ['0', !Ref ASAvMgmtSubnetId ], !Select ['1', !Ref ASAvMgmtSubnetId ] ] ]
          - !Split
            - ':'
            - !Join [':', [ !Select ['0', !Ref ASAvMgmtSubnetId ], !Select ['1', !Ref ASAvMgmtSubnetId ], !Select ['2', !Ref ASAvMgmtSubnetId ] ] ]
      LaunchTemplate:
        LaunchTemplateId: !Ref ASAvLaunchTemplate
        Version: 1
      MinSize: 0
      DesiredCapacity: 0
      MaxSize: 0
      MetricsCollection:
        - Granularity: 1Minute
          Metrics:
            - GroupDesiredCapacity
            - GroupInServiceInstances
            - GroupTerminatingInstances
            - GroupTotalInstances
            - GroupStandbyInstances
      HealthCheckGracePeriod: 720
      Cooldown: 720
      TerminationPolicies:
        - OldestLaunchConfiguration
        - OldestLaunchTemplate
        - ClosestToNextInstanceHour
      LifecycleHookSpecificationList:
        - DefaultResult: ABANDON
          HeartbeatTimeout: 60
          LifecycleHookName: Launch_LifecycleHook
          LifecycleTransition: 'autoscaling:EC2_INSTANCE_LAUNCHING'
        - DefaultResult: CONTINUE
          HeartbeatTimeout: 300
          LifecycleHookName: Terminate_LifecycleHook
          LifecycleTransition: 'autoscaling:EC2_INSTANCE_TERMINATING'
  ASAvLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'launch-template' ] ]
      LaunchTemplateData:
        EbsOptimized: false
        ImageId: !Ref ASAvAmiID
        InstanceType: !Ref ASAvInstanceType
        NetworkInterfaces:
          - AssociatePublicIpAddress: !Ref AssignPublicIP
            DeleteOnTermination: true
            DeviceIndex: 0
            Groups: !Ref ASAvMgmtSG
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
        UserData:
          Fn::Base64: !Sub |
            ! ASA Version
            interface management0/0
            no management-only
            nameif management
            security-level 100
            ip address dhcp setroute
            no shut
            !
            interface TenGigabitEthernet0/0
            shut
            !
            interface TenGigabitEthernet0/1
            nameif data-interface
            security-level 0
            ip address dhcp
            no shut
            !
            nve 1
            encapsulation geneve
            source-interface data-interface
            !
            interface vni1
            proxy single-arm
            nameif ge
            security-level 0
            vtep-nve 1
            !
            mtu data-interface 1806
            !
            same-security-traffic permit inter-interface
            same-security-traffic permit intra-interface
            crypto key generate rsa modulus 2048
            ssh 0 0 management
            ssh 0 0 data-interface
            ssh version 2
            ssh timeout 30
            ssh key-exchangegroup dh-group14-sha1
            username admin password AsAv_AuT0Scale privilege 15
            username admin attributes
            service-type admin
            username autoscaleuser password AsAv_AuT0Scale privilege 15
            aaa authentication ssh console LOCAL
            enable password AsAv_AuT0Scale level 15
            !
            ! Modifiable Segment of UserData
            ! Modify name-server as per your VPC
            dns domain-lookup management
            DNS server-group DefaultDNS
            name-server 10.0.0.2
            !
            ! License configuration
            ! Provide smart license registration CLIs
